{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.js","redux/contacts/slice.js","components/ContactForm/ContactForm.js","redux/contacts/actions.js","components/Filter/Filter.js","components/Spinner/Spinner.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","className","style","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","url","method","body","name","phone","invalidatesTags","deleteContact","id","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","ContactForm","data","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","formInner","onSubmit","e","preventDefault","currentTarget","elements","value","number","find","el","toLowerCase","toast","progress","undefined","reset","type","autoComplete","placeholder","pattern","required","createAction","payload","uuid","changeFilter","Filter","dispatch","useDispatch","filter","useSelector","state","contacts","onChange","target","Spinner","color","height","width","timeout","Component","ContactListItem","isDeleting","isLoading","onClick","disabled","size","ContactList","isFetching","contact","normalizedFilter","includes","map","App","items","createReducer","_","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.737fdd1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__33NIt\",\"formInner\":\"ContactList_formInner__2-maE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2fKqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInner\":\"ContactForm_formInner__20Dfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2cjhe\",\"formInner\":\"Filter_formInner__22-Vl\"};","import React from \"react\";\nimport style from '../Section/Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n    reducerPath: 'contactApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61979d305953f10017d23e72.mockapi.io/contacts', }),\r\n    tagTypes: ['Contacts'],\r\n    endpoints: builder => ({\r\n        getContacts: builder.query({\r\n            query: () => '/contacts',\r\n            providesTags: ['Contacts'],\r\n        }),\r\n        addContact: builder.mutation({\r\n            query: ({name, phone}) => ({\r\n                url: `/contacts`,\r\n                method: 'POST',\r\n                body: {name, phone},\r\n            }),\r\n            invalidatesTags: ['Contacts'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: (id) => ({\r\n                url: `/contacts/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Contacts'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetContactsQuery,\r\n    useAddContactMutation,\r\n    useDeleteContactMutation,\r\n} = contactApi;\r\n","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from '../ContactForm/ContactForm.module.css'\nimport { useGetContactsQuery, useAddContactMutation} from '../../redux/contacts/slice';\n\nexport default function ContactForm() {\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value;\n    const phone = e.currentTarget.elements.number.value;\n    if (data.find((el) => el.name.toLowerCase() === name.toLowerCase())) {\n      toast(`ðŸ¦„ Wow so easy! ${name} is already in contacts`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    } else {\n      addContact({ name, phone});\n    }\n    e.currentTarget.reset();\n  };\n    \n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <form className={style.formInner} onSubmit={handleSubmit} >\n        <label>Name: \n          <input\n            className='input'\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Enter name\"\n          />\n          </label>\n           <label>Number:\n          <input\n            className='input'\n            name=\"number\"\n            type=\"tel\"\n            autoComplete=\"off\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n           </label>\n        <button className='button' type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\n    payload: {\n        id: uuid(),\n        name,\n        number,\n    }, \n}));\nexport const deleteContact = createAction(\"contacts/delete\");\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import { getFilter } from '../../redux/contacts/contacts-selectors';\nimport {changeFilter} from \"../../redux/contacts/actions\";\n\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.contacts.filter);\n    const onChange = e => dispatch(changeFilter(e.target.value))\n\n    return (\n        <div className={style.formInner}>\n            <label>Find contacts by name\n                <input\n                    className='input'\n                    type=\"text\"\n                    name=\"filter\"\n                    value={filter}\n                    placeholder=\"Find me\"\n                    onChange={onChange}\n                    />\n            </label>\n        </div>\n    )\n}\n\nexport default Filter;\n","import { Component } from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nexport default class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={10}\r\n        width={10}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}","import React from 'react';\nimport style from './ContactList.module.css';\nimport Spinner from '../Spinner/Spinner';\nimport { useDeleteContactMutation } from '../../redux/contacts/slice';\nconst ContactListItem = ({ name, phone, id }) => {\n    const [deleteContact, { isLoading: isDeleting}] = useDeleteContactMutation();\n  return (\n    <li className={style.formInner}>\n      <p>Name: {name}</p>\n      <p>Phone: {phone}</p>\n      <button\n        type=\"button\"\n        className='button'\n        onClick={() => deleteContact(id)} disabled={isDeleting}\n      >\n        Delete <span>{isDeleting && <Spinner size={20}/> }</span>\n      </button>\n    </li>\n)};\n\nexport default ContactListItem;","import React from \"react\";\nimport { useSelector } from 'react-redux';\nimport Spinner from '../Spinner/Spinner';\nimport ContactListItem from './ContactListItem';\nimport style from './ContactList.module.css';\nimport { useGetContactsQuery} from '../../redux/contacts/slice';\n\n\nconst ContactList = () => {\n  let contacts;\n  const { data, isFetching } = useGetContactsQuery();\n\n  const contact = useSelector(state => state.contacts.filter);\n  if (data) {\n    const normalizedFilter = contact.toLowerCase();\n    contacts = data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }\n\n  return (\n    <>\n      {isFetching && <Spinner className={style.title} />}\n      {contacts && \n        <ul className={style.title}>\n          {contacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              {...contact}\n            />\n          ))}\n        </ul>\n      }\n    </>\n  );\n\n/*   return (\n    <>\n      {isFetching && <Loader className={style.title} type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />}\n      {contacts && \n        <ul className={style.title}>\n          {contacts.map(({ id, name, phone }) => (\n            <ContactListItem\n              key={id}\n              id={id}\n              name={name}\n              phone={phone}\n              onRemoveContact={()=> deleteContact(id)}\n            />\n          ))}\n        </ul>\n      }\n    </>\n  ); */\n}\n\nexport default ContactList;\n","import './App.css';\n\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm'\nimport Filter from './components/Filter/Filter'\nimport ContactList from './components/ContactList/ContactList'\n\nfunction App () {\n  return (\n    <>\n      <Section title='Phonebook'>\n        <ContactForm />\n      </Section>\n      <Filter />\n      {ContactList && <Section title='Contacts'>\n        <ContactList />\n      </Section>}\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './actions';\n\nconst items = createReducer([], {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport contactsReducer  from './contacts/reducers';\nimport {contactApi} from './contacts/slice';\n// import logger from 'redux-logger';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactApi.middleware,\n  ],\n    devTools: process.env.NODE_ENV === 'development',\n  });\n\nexport default store;\n\nsetupListeners(store.dispatch);  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}